
@model _5051.Models.StudentHomeViewModel

@{
    ViewBag.Title = "Home";
}

<link href="~/Content/Site.css" rel="stylesheet" type="text/css" />

<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">

<meta name="viewport" content="width=device-width, initial-scale=1">

<style>

    .postcards {
        padding: 10px;
        display: inline-block;
    }

    .m3 {
        padding-top: 25px;
    }

    #earth_div {
        padding-top: 25px;
        padding-bottom: 25px;
        padding-right: 25px;
        .body, h1, h2, h3, h4, h5, h6, .w3-wide

    {
        font-family: "Inconsolata", sans-serif;
    }
</style>

@*Top header
    <header class="w3-container w3-large">
        <p class="w3-right">
            <i class="fa fa-cog w3-margin-right"></i>
            <a href="~/Student/Nav">DashBoard</a>

    </header>*@

<ol class="breadcrumb">
    <li><a href="~/Student/Nav">DashBoard</a></li>
    <li class="active">Game</li>
</ol>

<!-- Top header -->
<div class="panel panel-success">
    <div class="panel-heading" style="background-color:  #008882">
        <h3 class="panel-title"></h3>
    </div>
    <div class="panel-body">

        <header class="w3-container w3-xlarge">
            <p></p>
            <p class="w3-right">Welcome, @Model.Student.Name</p>

        </header>


        <header class=" w3-right w3-median">

            <p id="demo"></p>

            <script>

                var dt = new Date();

                document.getElementById("demo").innerHTML = dt.toLocaleString();

                var myVar = setInterval(function () { myTimer() }, 1000);

                function myTimer() {

                    var d = new Date();

                    document.getElementById("demo").innerHTML = d.toLocaleString();

                }

            </script>

        </header>

        <!-- reward point -->

        <header class="w3-container w3-median">

            <p></p>

            <p class="w3-right">Reward Point：@Model.Student.Tokens</p>

        </header>


        <!-- earth -->
        <!-- button -->


        

        @{
        // If no points, then don't show the buy button
        if (Model.Student.Tokens >= 0)
        {
            using (Html.BeginForm("ResetPin", "Student", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("StudentId", Model.Student.Id)


              <div class="w3-right">
                <input type="submit" value="Reset" class="btn btn-success" style=" background-color: #008882 ;border:none; color: white;padding: 15px 25px;
                  text-align: center;">
              </div>
        }

    }
        }

        <header>
            <script src="http://www.webglearth.com/v2/api.js"></script>
            <script>
                function initialize() {
                    var earth = new WE.map('earth_div');
                    WE.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(earth);
                   @{
                       var count = 0;
                       var DblQuote = Convert.ToChar(34);
                       foreach (var pin in Model.MapPinLocationsList)
                       {

                           // Need to build the pins propertly
                           // Need to set the Color
                           // Need to set the Picture

                           var line1 = "var marker" + count + "= WE.marker([" + pin.Latitude + "," + pin.Longitude + "]).addTo(earth);";
                           var line2 = "marker" + count + ".bindPopup(";


                           var line3 = DblQuote + "<div style=''><b>" + pin.Heading + "</b><br>" + pin.Body + "</br><body></div>" + DblQuote;
                           var line4 = ", { maxWidth: 120, closeButton: true });";
                           //var line2 = "marker" + count + ".bindPopup(" + '"' + pin.Heading + '"' + ", { maxWidth: 120, closeButton: false });";
                           count++;
                           var output = line2 + line3 + line4;

                        @line1
                        @Html.Raw(output);
                       }
                }


                earth.setView([51.505, 0], 2);


                 //Start a simple rotation animation
                var before = null;
                requestAnimationFrame(function animate(now) {
                    var c = earth.getPosition();
                    var elapsed = before ? now - before : 0;
                    before = now;
                    earth.setCenter([c[0], c[1] + 0.1 * (elapsed / 30)]);
                    requestAnimationFrame(animate);
                });


                            }
            </script>

        </header>


        <body onload="initialize()">
            <div id="earth_div"></div>
        </body>







        @{
        // If no points, then don't show the buy button
        if (Model.Student.Tokens > 0)
        {
            using (Html.BeginForm("BuyPin", "Student", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("StudentId", Model.Student.Id)



                <input type="submit" value="Play" class="btn btn-success" style=" background-color: #008882 ;border:none; color: white;padding: 15px 25px;
                  text-align: center;">

        }

    }
        }

        <div>
            @{
            var index = Model.Student.Cities - 1;
            if (index >= 0)
            {
                var l1 = "<div style = '' ><b> Congraduation! You are currently at " + Model.MapPinLocationsList[index].Heading + "</b><br>" + Model.MapPinLocationsList[index].Body + "</br></div>";
                @Html.Raw(l1);
        }

            }
        </div>


        <div>
            <br></br>
            <br></br>
            <br></br>
        </div>
        <div class="col-3">

            @{
                count = 0;

                foreach (var pin in Model.MapPinLocationsList)
                {
                    if (count < Model.Student.Cities)
                    {
                        var line3 = "<div class='postcards w3-quarter' style = '' ><b>" + pin.Heading + "</b><br></br><img src= " + pin.Uri + " height=100 width=auto/ class='w3 - hover - opacity'></div>";

                        count++;

                    @Html.Raw(line3);
            }
            else
            {
                var line = "<div class='postcards w3-quarter' style = ''><b></b><br></br><img src= https://www.blurbusters.com/wp-content/uploads/2013/06/lock.png  height=100 width=auto></div>";
                @Html.Raw(line);
        }
    }
            }

        </div>
        <br />
        <br />

    </div>

</div>
